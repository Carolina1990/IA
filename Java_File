import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSlider;
import javax.swing.JSplitPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class Zoom_bidimensional extends JFrame {

 ImageIcon imagenSeleccionada;
 JLabel limgOriginal, limgGrises,label;
 JTextField txtNombreImg;
 BufferedImage imagenbuffer;
 BufferedImage imagenbuffer2;
 BufferedImage imagen_salida;
 WritableRaster salida;
 int contador_concatenar=0,limite_b_n=20;
 String s1,s2;
 String ruta_imagen = "C:\\Users\\UDS1\\Desktop\\Colombia\\imagenes";
 String ruta_imag_salida = "C:\\Users\\UDS1\\Desktop\\Colombia\\imagenes\\resultados";
 
 

 public Zoom_bidimensional() {

  JPanel pprincipal = new JPanel();
  pprincipal.setLayout(new BorderLayout());

  JPanel ptitulo = new JPanel();
  JLabel ltitulo = new JLabel("VISION ARTIFICIAL");
  ptitulo.add(ltitulo);

  JPanel pimagenes = new JPanel(new BorderLayout());
  JSplitPane split = new JSplitPane();
  split.setResizeWeight(0.5);
  JPanel pimagenoriginal = new JPanel();
  limgOriginal = new JLabel();
  pimagenoriginal.add(limgOriginal);
  JScrollPane spimgoriginal = new JScrollPane(pimagenoriginal);
  split.setLeftComponent(spimgoriginal);
  JPanel pimagengrises = new JPanel();
  limgGrises = new JLabel();
  pimagengrises.add(limgGrises);
  JScrollPane spimggrises = new JScrollPane(pimagengrises);
  split.setRightComponent(spimggrises);  
  JFrame ventana = new JFrame();

ventana.setVisible(true);

  
  pimagenes.add(split);

  JPanel pselector = new JPanel();
  txtNombreImg = new JTextField(30);
  JButton btn = new JButton("Seleccionar Imagen");
  btn.addActionListener(new ActionListener() {
	  
	  
//@Override
   public void actionPerformed(ActionEvent arg0) 
   {
    
	JFileChooser selector = new JFileChooser();
    File ruta = new File(ruta_imagen);
    selector.setCurrentDirectory(ruta);
    int r = selector.showOpenDialog(null);
    if (r == JFileChooser.APPROVE_OPTION) {
     try {
    	 
    	    imagen_salida = ImageIO.read(selector.getSelectedFile());
    	 
    	 
    	    imagenbuffer = ImageIO.read(selector.getSelectedFile());
    	    imagenbuffer2 = ImageIO.read(selector.getSelectedFile());
            imagenSeleccionada = new ImageIcon(imagenbuffer2);
            limgOriginal.setIcon(imagenSeleccionada);
      
   
  
      limgGrises.setIcon(new ImageIcon(binarizar()));
      
      
      salida = imagenbuffer.getRaster();
      imagen_salida.setData( salida ); 
      
      concatenar_string_int_ruta_salida();
      ImageIO.write(imagen_salida,"jpg",new File(ruta_imag_salida )); 
      
      
      txtNombreImg.setText(selector.getSelectedFile().getName());
     } catch (IOException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
     }
    }
   }
  });
  pselector.add(txtNombreImg);
  pselector.add(btn);

  pprincipal.add(ptitulo, BorderLayout.NORTH);
  pprincipal.add(pimagenes, BorderLayout.CENTER);
  pprincipal.add(pselector, BorderLayout.SOUTH);

  add(pprincipal);

  setVisible(true);
  setDefaultCloseOperation(EXIT_ON_CLOSE);
  setBounds(0, 0, 800, 600);
  setLocationRelativeTo(null);

 }

 
 public BufferedImage tres_bandas() {
	 
  BufferedImage bi = null;
  int pixel;
  if (imagenbuffer != null) {
   bi = new BufferedImage(imagenbuffer.getWidth(), imagenbuffer.getHeight(),imagenbuffer.getType());
   
   for (int x = 0; x < imagenbuffer.getWidth(); x++) {
    for (int y = 0; y < imagenbuffer.getHeight(); y++) {
    	 pixel = imagenbuffer.getRGB(x, y);
        int r = (pixel >> 16) & 0xff;
        int g = (pixel >> 8) & 0xff;
        int b = (pixel) & 0xff;
     
        if(x>100  && x<200  )
        {
            r=0;
            g=0;
            b=0;
        }
        
        
        
     imagenbuffer.setRGB(x, y, new Color(r, g, b).getRGB());
     bi.setRGB(x, y, new Color(r, g, b).getRGB());
    }
   }
  }
  return bi;
 }

 
 

public BufferedImage negativo() {
	 
  BufferedImage bi = null;
  int pixel;
  if (imagenbuffer != null) {
   bi = new BufferedImage(imagenbuffer.getWidth(), imagenbuffer.getHeight(),imagenbuffer.getType());
   
   for (int x = 0; x < imagenbuffer.getWidth(); x++) {
    for (int y = 0; y < imagenbuffer.getHeight(); y++) {
    	 pixel = imagenbuffer.getRGB(x, y);
        int r = (pixel >> 16) & 0xff;
        int g = (pixel >> 8) & 0xff;
        int b = (pixel) & 0xff;
     
        r=255-r;
        g=255-g;
        b=255-b;
        
        
        
     imagenbuffer.setRGB(x, y, new Color(r, g, b).getRGB());
     bi.setRGB(x, y, new Color(r, g, b).getRGB());
    }
   }
  }
  return bi;
 }
 
public BufferedImage bandas() {
	 
  BufferedImage bi = null;
  int pixel;
  if (imagenbuffer != null) {
   bi = new BufferedImage(imagenbuffer.getWidth(), imagenbuffer.getHeight(),imagenbuffer.getType());
   
   for (int x = 0; x < imagenbuffer.getWidth(); x++) {
    for (int y = 0; y < imagenbuffer.getHeight(); y++) {
    	 pixel = imagenbuffer.getRGB(x, y);
        int r = (pixel >> 16) & 0xff;
        int g = (pixel >> 8) & 0xff;
        int b = (pixel) & 0xff;
     
        
        
        
        
     imagenbuffer.setRGB(x, y, new Color(b, b, b).getRGB());
     bi.setRGB(x, y, new Color(b, b, b).getRGB());
    }
   }
  }
  return bi;
 }
 
 
public BufferedImage binarizar() {
	 
  BufferedImage bi = null;
  int pixel;
  if (imagenbuffer != null) {
   bi = new BufferedImage(imagenbuffer.getWidth(), imagenbuffer.getHeight(),imagenbuffer.getType());
   
   for (int x = 0; x < imagenbuffer.getWidth(); x++) {
    for (int y = 0; y < imagenbuffer.getHeight(); y++) {
    	 pixel = imagenbuffer.getRGB(x, y);
        int r = (pixel >> 16) & 0xff;
        int g = (pixel >> 8) & 0xff;
        int b = (pixel) & 0xff;
        int promedio=0; 
        promedio=(r+g+b)/3;
        if(promedio<150)
        {
            r=g=b=0;
        }
        
        
        
        
        
     imagenbuffer.setRGB(x, y, new Color(r, g, b).getRGB());
     bi.setRGB(x, y, new Color(r, g, b).getRGB());
    }
   }
  }
  return bi;
 }
 
 
 public void concatenar_string_int_ruta_salida()
 {
      ruta_imag_salida = "C:\\Users\\UDS1\\Desktop\\Colombia\\imagenes\\resultados";
             contador_concatenar++;
             System.out.println(contador_concatenar);
             s1="\\resultado_";
             s1=s1.concat(Integer.toString(contador_concatenar));
             s2=".jpg";  //    24    BITS 
             //s2=".gif";    //    8     BITS
             s1=s1.concat(s2);
             
             ruta_imag_salida=ruta_imag_salida.concat(s1);
             System.out.println(ruta_imag_salida);
 }
 
 public static void main(String[] args) {
  new Zoom_bidimensional();
 }

}
